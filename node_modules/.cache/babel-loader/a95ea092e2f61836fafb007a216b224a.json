{"ast":null,"code":"const nonJsonTypes = [\"function\", \"symbol\", \"undefined\"];\nconst protectedProps = [\"constructor\", \"prototype\", \"__proto__\"];\nconst objectPrototype = Object.getPrototypeOf({});\n/**\n * Custom JSON serializer for Error objects.\n * Returns all built-in error properties, as well as extended properties.\n */\n\nexport function toJSON() {\n  // HACK: We have to cast the objects to `any` so we can use symbol indexers.\n  // see https://github.com/Microsoft/TypeScript/issues/1863\n  let pojo = {};\n  let error = this;\n\n  for (let key of getDeepKeys(error)) {\n    if (typeof key === \"string\") {\n      let value = error[key];\n      let type = typeof value;\n\n      if (!nonJsonTypes.includes(type)) {\n        pojo[key] = value;\n      }\n    }\n  }\n\n  return pojo;\n}\n/**\n * Returns own, inherited, enumerable, non-enumerable, string, and symbol keys of `obj`.\n * Does NOT return members of the base Object prototype, or the specified omitted keys.\n */\n\nexport function getDeepKeys(obj) {\n  let omit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let keys = []; // Crawl the prototype chain, finding all the string and symbol keys\n\n  while (obj && obj !== objectPrototype) {\n    keys = keys.concat(Object.getOwnPropertyNames(obj), Object.getOwnPropertySymbols(obj));\n    obj = Object.getPrototypeOf(obj);\n  } // De-duplicate the list of keys\n\n\n  let uniqueKeys = new Set(keys); // Remove any omitted keys\n\n  for (let key of omit.concat(protectedProps)) {\n    uniqueKeys.delete(key);\n  }\n\n  return uniqueKeys;\n}","map":{"version":3,"mappings":"AAEA,MAAMA,YAAY,GAAG,CAAC,UAAD,EAAa,QAAb,EAAuB,WAAvB,CAArB;AACA,MAAMC,cAAc,GAAG,CAAC,aAAD,EAAgB,WAAhB,EAA6B,WAA7B,CAAvB;AACA,MAAMC,eAAe,GAAGC,MAAM,CAACC,cAAP,CAAsB,EAAtB,CAAxB;AAEA;;;;;AAIA,OAAM,SAAUC,MAAV,GAAgB;EACpB;EACA;EACA,IAAIC,IAAI,GAAQ,EAAhB;EACA,IAAIC,KAAK,GAAG,IAAZ;;EAEA,KAAK,IAAIC,GAAT,IAAgBC,WAAW,CAACF,KAAD,CAA3B,EAAoC;IAClC,IAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;MAC3B,IAAIE,KAAK,GAAGH,KAAK,CAACC,GAAD,CAAjB;MACA,IAAIG,IAAI,GAAG,OAAOD,KAAlB;;MAEA,IAAI,CAACV,YAAY,CAACY,QAAb,CAAsBD,IAAtB,CAAL,EAAkC;QAChCL,IAAI,CAACE,GAAD,CAAJ,GAAYE,KAAZ;MACD;IACF;EACF;;EAED,OAAOJ,IAAP;AACD;AAGD;;;;;AAIA,OAAM,SAAUG,WAAV,CAAsBI,GAAtB,EAAoE;EAAA,IAAjCC,IAAiC,uEAAF,EAAE;EACxE,IAAIC,IAAI,GAA2B,EAAnC,CADwE,CAGxE;;EACA,OAAOF,GAAG,IAAIA,GAAG,KAAKX,eAAtB,EAAuC;IACrCa,IAAI,GAAGA,IAAI,CAACC,MAAL,CACLb,MAAM,CAACc,mBAAP,CAA2BJ,GAA3B,CADK,EAELV,MAAM,CAACe,qBAAP,CAA6BL,GAA7B,CAFK,CAAP;IAIAA,GAAG,GAAGV,MAAM,CAACC,cAAP,CAAsBS,GAAtB,CAAN;EACD,CAVuE,CAYxE;;;EACA,IAAIM,UAAU,GAAG,IAAIC,GAAJ,CAAQL,IAAR,CAAjB,CAbwE,CAexE;;EACA,KAAK,IAAIP,GAAT,IAAgBM,IAAI,CAACE,MAAL,CAAYf,cAAZ,CAAhB,EAA6C;IAC3CkB,UAAU,CAACE,MAAX,CAAkBb,GAAlB;EACD;;EAED,OAAOW,UAAP;AACD","names":["nonJsonTypes","protectedProps","objectPrototype","Object","getPrototypeOf","toJSON","pojo","error","key","getDeepKeys","value","type","includes","obj","omit","keys","concat","getOwnPropertyNames","getOwnPropertySymbols","uniqueKeys","Set","delete"],"sources":["../src/to-json.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}